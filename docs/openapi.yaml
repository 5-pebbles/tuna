openapi: 3.0.3
info:
  title: tuna
  description: ''
  license:
    name: ''
  version: 0.1.0
paths:
  /docs/openapi.json:
    get:
      tags:
      - crate
      summary: Retrieve json OpenAPI documentation
      description: |-
        Retrieve json OpenAPI documentation

        Requires: `DocsRead` permission
      operationId: docs_json
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Forbidden requires permission `DocsRead`
      security:
      - permissions:
        - DocsRead
  /docs/openapi.yaml:
    get:
      tags:
      - crate
      summary: Retrieve yaml OpenAPI documentation
      description: |-
        Retrieve yaml OpenAPI documentation

        Requires: `DocsRead` permission
      operationId: docs_yaml
      responses:
        '200':
          description: Success
          content:
            application/x-yaml:
              schema:
                type: string
        '403':
          description: Forbidden requires permission `DocsRead`
      security:
      - permissions:
        - DocsRead
  /permissions/{username}:
    post:
      tags:
      - permissions
      summary: Grant another user a list of permissions
      description: |-
        Grant another user a list of permissions

        Requires: `PermissionAdd` as well as all permissions you intend to grant
      operationId: permission_add
      parameters:
      - name: username
        in: path
        description: The username of the user you would like to grant permissions to
        required: true
        schema:
          type: string
      requestBody:
        description: A list of permissions to grant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Json'
            example:
            - DocsRead
            - PermissionAdd
        required: true
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden you do not have the required permissions
      security:
      - permissions:
        - PermissionAdd
    delete:
      tags:
      - permissions
      summary: Revoke a list of permissions from a user
      description: |-
        Revoke a list of permissions from a user

        Requires: `PermissionDelete` & all permissions of the user who's permissions are being revoked
      operationId: permission_delete
      parameters:
      - name: username
        in: path
        description: The username of the user who's permissions you would like to revoke
        required: true
        schema:
          type: string
      requestBody:
        description: A list of permissions to Revoke
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Json'
            example:
            - DocsRead
            - PermissionDelete
        required: true
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden you do not have the required permissions
      security:
      - permissions:
        - PermissionDelete
  /token:
    post:
      tags:
      - tokens
      summary: Creates a login token which can be used to access other endpoints
      description: Creates a login token which can be used to access other endpoints
      operationId: token_write
      requestBody:
        description: Your username & password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DangerousLogin'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Json'
              example: 479f879a-db6d-47e9-a094-124cd0ad648f
        '403':
          description: Forbidden invalid username and/or password
  /token/{username}:
    delete:
      tags:
      - tokens
      summary: Delete all login tokens for a given user
      description: |-
        Delete all login tokens for a given user

        Requires: `TokenDelete` permission to delete another users tokens, but you are free to delete your own
      operationId: token_delete
      parameters:
      - name: username
        in: path
        description: The username of the user who's tokens you would like to delete
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden requires permission `TokenDelete`
      security:
      - permissions:
        - TokenDelete
components:
  schemas:
    DangerousLogin:
      type: object
      description: The login information for a user
      required:
      - username
      - password
      properties:
        password:
          type: string
          description: Your password
          example: jnoM76raK
        username:
          type: string
          description: Your username
          example: 5-pebbles
  securitySchemes:
    api_key:
      type: apiKey
      in: cookie
      name: permissions
